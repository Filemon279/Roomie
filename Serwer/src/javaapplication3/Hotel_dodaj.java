package javaapplication3;

import java.io.File;
import java.io.IOException;
import java.math.BigInteger;
import java.security.SecureRandom;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFormattedTextField.AbstractFormatter;
import javax.swing.JOptionPane;
import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;


/**
 *
 * @author filemon
 */
public class Hotel_dodaj extends javax.swing.JFrame {

    /**
     * Nowa forma Hotel_dodaj
     * 
     * Dodaje pokój, do listy pokoi - Ogólnie tworzy konta na które można się zalogować.
     * 
     */
    JDatePickerImpl field_checkIn;
    JDatePickerImpl field_checkOut ;
    JDatePanelImpl dataPanel_checkIn ;
    JDatePanelImpl dataPanel_checkOut;
    UtilDateModel model;
    UtilDateModel model2;
    public Hotel_dodaj() {
        initComponents();
        setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
            try {
                  label_bg.setIcon(new ImageIcon(ImageIO.read(new File("main_bg.jpg"))));
                } 
            catch (IOException ex) 
                {
                  Logger.getLogger(Ramka.class.getName()).log(Level.SEVERE, null, ex);
                }
            model = new UtilDateModel();
            model2 = new UtilDateModel();
            //model.setDate(20,04,2014);
// Need this...
Properties p = new Properties();
p.put("text.today", "Today");
p.put("text.month", "Month");
p.put("text.year", "Year");
dataPanel_checkIn = new JDatePanelImpl(model, p);
dataPanel_checkOut = new JDatePanelImpl(model2, p);
// Don't know about the formatter, but there it is...
field_checkIn = new JDatePickerImpl(dataPanel_checkIn, new DateLabelFormatter());
field_checkOut = new JDatePickerImpl(dataPanel_checkOut, new DateLabelFormatter());

  javax.swing.JLabel jLabel_checkIn = new javax.swing.JLabel();
  javax.swing.JLabel jLabel_checkOut= new javax.swing.JLabel();
  jLabel_checkIn.setText("<html><font color='white'>Check IN</font></html>");
    jLabel_checkOut.setText("<html><font color='white'>Check OUT</font></html>");
   

  jPanel1.add(jLabel_checkIn);
    jPanel1.add(field_checkIn);
      jPanel1.add(jLabel_checkOut);
      jPanel1.add(field_checkOut);



    }

 public class DateLabelFormatter extends AbstractFormatter {

    private String datePattern = "yyyy-MM-dd";
    private SimpleDateFormat dateFormatter = new SimpleDateFormat(datePattern);

    @Override
    public Object stringToValue(String text) throws ParseException {
        return dateFormatter.parseObject(text);
    }

    @Override
    public String valueToString(Object value) throws ParseException {
        if (value != null) {
            Calendar cal = (Calendar) value;
            return dateFormatter.format(cal.getTime());
        }

        return "";
    }

}   
    
  
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        field_type_number = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        field_generate_password = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        field_type_name = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        field_type_surname = new javax.swing.JTextField();
        button_add_room = new javax.swing.JButton();
        field_inne = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        label_bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Roomie Server - Dodaj");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(254, 254, 254));
        jLabel1.setText("DODAJ POKÓJ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(228, 12, -1, -1));

        field_type_number.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_type_numberActionPerformed(evt);
            }
        });
        getContentPane().add(field_type_number, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 160, -1));

        jLabel2.setForeground(new java.awt.Color(254, 254, 254));
        jLabel2.setText("Nr. Pokoju:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        jLabel3.setForeground(new java.awt.Color(254, 254, 254));
        jLabel3.setText("Hasło Pokoju:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 120, -1, -1));
        getContentPane().add(field_generate_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 110, 160, -1));

        jButton1.setBackground(new java.awt.Color(55, 129, 149));
        jButton1.setForeground(new java.awt.Color(254, 254, 254));
        jButton1.setText("Generuj Haslo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 213, 50));

        jLabel7.setForeground(new java.awt.Color(254, 254, 254));
        jLabel7.setText("Opcjonalnie:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 150, -1, -1));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Imię:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, -1, -1));
        getContentPane().add(field_type_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 160, -1));

        jLabel9.setForeground(new java.awt.Color(254, 254, 254));
        jLabel9.setText("Nazwisko:");
        jLabel9.setAlignmentY(0.0F);
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 80, -1, -1));
        getContentPane().add(field_type_surname, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 70, 160, -1));

        button_add_room.setBackground(new java.awt.Color(55, 129, 149));
        button_add_room.setForeground(new java.awt.Color(254, 254, 254));
        button_add_room.setText("Dodaj Pokój");
        button_add_room.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_add_roomActionPerformed(evt);
            }
        });
        getContentPane().add(button_add_room, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 280, 186, 55));

        field_inne.setColumns(20);
        field_inne.setLineWrap(true);
        field_inne.setRows(5);
        field_inne.setText("Brak dodatkowych życzeń");
        field_inne.setWrapStyleWord(true);
        field_inne.setMaximumSize(new java.awt.Dimension(100, 16));
        getContentPane().add(field_inne, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 170, -1, 100));

        jPanel1.setBackground(new java.awt.Color(55, 129, 149));
        jPanel1.setForeground(new java.awt.Color(102, 102, 255));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 250, 120));

        label_bg.setForeground(new java.awt.Color(254, 254, 254));
        getContentPane().add(label_bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 340));

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void field_type_numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_type_numberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_field_type_numberActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    field_generate_password.setText(GenerujHaslo());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void button_add_roomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_add_roomActionPerformed
  //Sprawdzanie poprawnosci danych.  
 String sDate = field_checkIn.getJFormattedTextField().getText();
 String eDate = field_checkOut.getJFormattedTextField().getText();
  SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
 Date date2 = null;
     int i = 0;
          Date date = null;
        if  (field_checkIn.getJFormattedTextField().getText().equals("")) ;
        else if(field_checkOut.getJFormattedTextField().getText().equals(""));
        else{

          
        try {
           date = sdf.parse(sDate);
        } catch (ParseException ex) {
            Logger.getLogger(Hotel_dodaj.class.getName()).log(Level.SEVERE, null, ex);
        }
    
         try {
            date2 = sdf.parse(eDate);
            i=1;
        } catch (ParseException ex) {
            Logger.getLogger(Hotel_dodaj.class.getName()).log(Level.SEVERE, null, ex);
        }}
       //  System.out.println(date.compareTo(date2));
      // if(date.compareTo(date2)==-1) //ok
      if(i==0) JOptionPane.showMessageDialog(null,"Nie podano czasu pobytu","Uwaga",JOptionPane.WARNING_MESSAGE);
       else if (date.compareTo(date2)==0) JOptionPane.showMessageDialog(null,"Minimalny pobyt to 1 noc","Uwaga",JOptionPane.WARNING_MESSAGE);//jeden dzien
       else if (date.compareTo(date2)==1)JOptionPane.showMessageDialog(null,"Nieprawidlowy przedzial czasowy pobytu","Uwaga",JOptionPane.WARNING_MESSAGE);  //BLAD
      
       else if(field_type_number.getText().toString().equals("")) JOptionPane.showMessageDialog(null,"Nie podano numeru pokoju","Uwaga",JOptionPane.WARNING_MESSAGE);
   else if (!field_type_number.getText().matches("\\d+"))JOptionPane.showMessageDialog(null,"Bledny numer pokoju","Uwaga",JOptionPane.WARNING_MESSAGE);
   else if (Ramka.List_unconnected_rooms.contains(field_type_number.getText())||Ramka.List_connected_rooms.contains(field_type_number.getText())) JOptionPane.showMessageDialog(null,"Pokój jest juz zarejestrowany","Uwaga",JOptionPane.WARNING_MESSAGE); 
   else if (field_generate_password.getText().toString().equals("")) JOptionPane.showMessageDialog(null,"Proszę wygenerować hasło","Uwaga",JOptionPane.WARNING_MESSAGE);
 
   else
   {
       //INSERT INTO `pokoje`(`Numer`, `Haslo`, `Imie`, `Nazwisko`, `checkIn`, `checkOut`, `inne`) VALUES ([],[],[],[],[],[],[])
       String polecenie = "INSERT INTO `pokoje`(`Numer`, `Haslo`, `Imie`, `Nazwisko`, `checkIn`, `checkOut`, `inne`) VALUES ('";
       polecenie+=field_type_number.getText().toString()+"','"; //Numer
       polecenie+=field_generate_password.getText().toString()+"','"; // Haslo
       polecenie+=field_type_name.getText().toString()+"','"; // Imie
       polecenie+=field_type_surname.getText().toString()+"','"; // Nazwisko
       polecenie+=field_checkIn.getJFormattedTextField().getText()+"','"; // Check IN
       polecenie+=field_checkOut.getJFormattedTextField().getText()+"','"; // Check OUT
       polecenie+=field_inne.getText().toString()+"')"; // inne
       System.out.println(polecenie);

       
     
       try {
           baza_danych.stmt.execute(polecenie);
       } catch (SQLException ex) {
           Logger.getLogger(Hotel_dodaj.class.getName()).log(Level.SEVERE, null, ex);
       }
       Pokoje pokoj = new Pokoje(Integer.parseInt(field_type_number.getText().toString()),field_generate_password.getText().toString(),field_checkIn.getJFormattedTextField().getText(),field_checkOut.getJFormattedTextField().getText(),field_type_name.getText(),field_type_surname.getText());
       Ramka.pokoje[Integer.parseInt(field_type_number.getText().toString())]=pokoj;
       Ramka.List_unconnected_rooms.addElement(field_type_number.getText());
   }
        
    }//GEN-LAST:event_button_add_roomActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hotel_dodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hotel_dodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hotel_dodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hotel_dodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hotel_dodaj().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_add_room;
    private javax.swing.JTextField field_generate_password;
    private javax.swing.JTextArea field_inne;
    private javax.swing.JTextField field_type_name;
    private javax.swing.JTextField field_type_number;
    private javax.swing.JTextField field_type_surname;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel label_bg;
    // End of variables declaration//GEN-END:variables


    
    
    
    
   /**
    * Generuj Losowe Hasło
    * 
    */ 
public String GenerujHaslo() 
    {
       SecureRandom random = new SecureRandom(); 
       return new BigInteger(15, random).toString(32);
    }

}


